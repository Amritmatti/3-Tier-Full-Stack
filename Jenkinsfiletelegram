pipeline {
    agent any

    environment {
        APPLICATION_NAME = 'WEBAPP'
    }
    stages {
        stage('Build User') {
            steps {
                wrap([$class: 'BuildUser']) {
                    script {
                        env.BUILD_USER_ID = env.BUILD_USER ?: 'Unknown'
                    }
                }
            }
        }

        stage('Notify Start') {
        // Get brach name from merge commit subject
        // Print all parts of subject separated by / starting from 2nd fild to
        // the end of message (NF = number-of-fields).
        // It works even if any slashes in branch name.
        def mergedBranchName = sh(returnStdout: true,
                                  script: "git log -n 1 --pretty=format:'%s' \
                                           | grep 'Merge pull' \
                                           | awk -F \"/\" 'out=\"\";  { for (i=2; i<=NF; i++) { out=out\"/\"\$i;  } print out; }'"
                                 ).trim().minus("/")
            steps {
                withCredentials([
                    string(credentialsId: 'telegram_token', variable: 'TOKEN'),
                    string(credentialsId: 'telegram_chat_id', variable: 'CHAT_ID')
                ]) {
                    script {
                        sh '''
                        CURRENT_DATE=$(date)
                        curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage \
                            -d "chat_id=${CHAT_ID}" \
                            -d text="Job Name: ${JOB_NAME}\nApplication: ${APPLICATION_NAME}\nUsername: ${BUILD_USER_ID}\nBuild Url: ${BUILD_URL}\nBuild Number: ${BUILD_NUMBER}\nBranch: ${BRANCH_NAME}\nMerged Branch: ${MERGED_BRANCH}\nDate/Time: ${CURRENT_DATE}\nStatus: 🚀 Deployment Started 🚀"
                        '''
                    }
                }
            }
        }

        stage('Execute JUnit Test & Build jar file') {
            steps {
                dir('src') {
                    script {
                        try {  
                            // Your test command here
                            sh 'echo test' // Replace with your actual test command
                            // Simulate a failure for demonstration purposes
                            // sh 'exit 1' // Uncomment to simulate a failure
                        } catch (err) {
                            echo err.getMessage()
                            withCredentials([
                                string(credentialsId: 'telegram_token', variable: 'TOKEN'),
                                string(credentialsId: 'telegram_chat_id', variable: 'CHAT_ID')
                            ]) {
                                script {
                                    sh '''
                                    CURRENT_DATE=$(date)
                                    curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage \
                                        -d "chat_id=${CHAT_ID}" \
                                        -d text="Job Name: ${JOB_NAME}\nApplication: ${APPLICATION_NAME}\nUsername: ${BUILD_USER_ID}\nBuild Url: ${BUILD_URL}\nBuild Number: ${BUILD_NUMBER}\nBranch: ${BRANCH_NAME}\nMerged Branch: ${MERGED_BRANCH}\nDate/Time: ${CURRENT_DATE}\nStatus: ❌ Failed to build 😱"
                                    '''
                                }
                            }
                            sh 'exit 1'
                        }
                    }
                }
            }
        }

        stage('Finished msg') {
            steps {
                withCredentials([
                    string(credentialsId: 'telegram_token', variable: 'TOKEN'),
                    string(credentialsId: 'telegram_chat_id', variable: 'CHAT_ID')
                ]) {
                    script {
                        sh '''
                        CURRENT_DATE=$(date)
                        curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage \
                            -d "chat_id=${CHAT_ID}" \
                            -d text="Job Name: ${JOB_NAME}\nApplication: ${APPLICATION_NAME}\nUsername: ${BUILD_USER_ID}\nBuild Url: ${BUILD_URL}\nBuild Number: ${BUILD_NUMBER}\nBranch: ${BRANCH_NAME}\nMerged Branch: ${MERGED_BRANCH}\nDate/Time: ${CURRENT_DATE}\nStatus: ✅ Build successfully 😊"
                        '''
                    }
                }
            }
        }
    }
}
